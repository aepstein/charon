<h2><%=h @request %></h2>

<p>Basis: <%=h @request.basis %></p>
<p>Status: <%=h @request.status %></p>
<p>Requestor total: <%= number_to_currency @request.editions.perspective_equals('requestor').sum('editions.amount') %></p>
<% if permitted_to? :review -%>
<p>Reviewer total: <%= number_to_currency @request.editions.perspective_equals('reviewer').sum('editions.amount') %></p>
<p>Allocation total (after caps): <%= number_to_currency @request.items.sum('items.amount') %></p>
<table>
  <thead>
  <tr>
    <th>Category</th>
    <th>Allocation (after caps)</th>
  </tr>
  </thead>
  <tbody>
  <% @request.basis.structure.categories.each do |category| -%>
  <% table_row_tag do -%>
    <td><%=h category.name %></td>
    <td><%= number_to_currency @request.items.allocation_for_category(category) %></td>
  <% end -%>
  <% end -%>
  </tbody>
</table>

<p>Note: Higher priority items are allocated before lower priorities until the allocation cap is reached.</p>
<% end -%>

<% if @request.status == 'started' %>
<p>
Below is a listing of items in your request.  You may add, move (re-prioritize),
and delete items.  For each item, you should also add requestor edition specifiying
details about that item, including the amount you are requesting.
</p>

<p>
When you are finished, instruct the appropriate officers of your organization to
approve this request.  After the request is approved, you cannot change it.
</p>
<% elsif @request.status == 'completed' %>
<p>
This request is now frozen because it has been approved by one or more authorized officers.
Its status will advance to <em>submitted</em> once all required approvals are
registered.
</p>
<% else %>
<% if permitted_to? :review -%>
<% if @request.status == 'accepted' -%>
<p>
This request is accepted for review by the commission.
</p>
<% end -%>
<% else -%>
<p>
This request is now submitted for review.
</p>
<% end -%>
<% end -%>

<h3>Items</h3>

<%= render :partial => 'items/items', :object => @request.items.root,
      :locals => { :read_only => true, :show_detail => true } %>

<% unless @request.approvers.unfulfilled_for_status(@request.status).empty? -%>
<h2>Who must approve</h2>
<p>The following users must approve before the request may be considered submitted.</p>
<ul>
  <% @request.approvers.unfulfilled_for_status(@request.status).each do |user| -%>
  <li><%=h user %></li>
  <% end -%>
</ul>

<% end -%>
<% if @request.organization.registrations.current -%>
<h3>Membership information for <%=h organization %></h3>
<dl>
<%= render :partial => 'registrations/membership', :object => organization.registrations.current %>
</dl>

<% end -%>
<h3>Who has approved</h3>

<%= render :partial => 'approvals/approvals', :object => @request.approvals.all(:include => :user),
           :locals => { :user => true, :approvable => false } %>

<p>
<%= link_to h("Back to #{@request.organization}"), @request.organization %> |
<%= link_to 'Edit', edit_request_path(@request) %>
</p>

